version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: hashmancer-redis
    command: redis-server --requirepass hashmancer123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - hashmancer-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: .
      dockerfile: Dockerfile.windows-server
    container_name: hashmancer-server
    ports:
      - "8080:8080"
    environment:
      - HASHMANCER_HOST=0.0.0.0
      - HASHMANCER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=hashmancer123
      - HASHMANCER_SECRET_KEY=windows-test-secret-key-change-in-production
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hashmancer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile.windows-worker
    container_name: hashmancer-worker
    environment:
      - HASHMANCER_SERVER_IP=server
      - HASHMANCER_SERVER_PORT=8080
      - WORKER_PORT=8081
      - WORKER_ID=windows-docker-worker
      - MAX_CONCURRENT_JOBS=3
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
      - ./worker_data:/app/worker_data
      - ./config:/app/config
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hashmancer-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu, compute, utility]

  # Monitoring service
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile.windows-server
    container_name: hashmancer-monitoring
    ports:
      - "8081:8081"
    environment:
      - MONITORING_PORT=8081
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=hashmancer123
      - PYTHONPATH=/app
    volumes:
      - ./logs:/app/logs
      - ./monitoring_data:/app/monitoring_data
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hashmancer-network
    command: ["python", "-m", "hashmancer.server.monitoring", "--port", "8081"]

volumes:
  redis_data:
    driver: local
  hashmancer_data:
    driver: local

networks:
  hashmancer-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16